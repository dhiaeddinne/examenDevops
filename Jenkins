pipeline {


    agent any


    stages {

        stage("Cloning Project"){
            steps {
                git branch: 'main',
                url: 'https://github.com/dhiaeddinne/examenDevops.git'
                echo 'checkout stage'
            }
        }

        stage ('Maven Clean'){
            steps
			{
                sh 'mvn clean'
            }
        }

		stage ('Maven Compile'){
            steps
			{
                sh 'mvn compile'
            }
        }

        stage ('Maven Test'){
            steps
			{
                sh 'mvn test'
            }
        }

		stage('Maven Build'){
            steps
			{
                sh 'mvn package'
            }
        }

		stage ('Maven Install'){
            steps
			{
                sh 'mvn install'
            }
        }

            stage('MVN SONARQUBE') {
      steps {
        sh 'docker run -d --name sonarqube -p 9000:9000 sonarqube'
        sh 'docker run -e SONAR_HOST_URL=http://192.168.1.5/:9000 -v $(pwd):/usr/src sonarsource/sonar-scanner'
      }
    }

        stage('Test') {
            steps {
                sh 'docker run myapp mvn test'
            }
            post {
                always {
                junit 'target/surefire-reports/*.xml'
                }
            }
    }
    }
}




// pipeline {
//   agent any
//   stages {
//     stage('Clone') {
//       steps {
//         git branch: 'master', url: '<repository-url>'
//       }
//     }
//     stage('Build') {
//       steps {
//         sh 'docker build -t myapp .'
//       }
//     }
    // stage('Test') {
    //   steps {
    //     sh 'docker run myapp mvn test'
    //   }
    //   post {
    //     always {
    //       junit 'target/surefire-reports/*.xml'
    //     }
    //   }
    // }
    // stage('Analyze') {
    //   steps {
    //     sh 'docker run -d --name sonarqube -p 9000:9000 sonarqube'
    //     sh 'docker run -e SONAR_HOST_URL=http://localhost:9000 -v $(pwd):/usr/src sonarsource/sonar-scanner'
    //   }
    // }
//     stage('Publish') {
//       steps {
//         sh 'docker run -d -p 8081:8081 --name nexus sonatype/nexus3'
//         sh 'docker build -t myapp .'
//         sh 'docker tag myapp localhost:8081/myapp'
//         sh 'docker push localhost:8081/myapp'
//       }
//     }
//   }
//   post {
//     always {
//       sh 'docker stop sonarqube'
//       sh 'docker stop nexus'
//     }
//   }
// }